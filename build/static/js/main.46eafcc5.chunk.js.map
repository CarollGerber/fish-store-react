{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","concat","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","adjectives","getFunName","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","namee","EditFishForm","handleChange","updatedFish","Object","objectSpread","defineProperty","updateFish","index","_this2","onChange","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","keys","fishes","map","key","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","removeFromOrder","orderIds","total","reduce","prevTotal","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampeFishes","params","match","syncState","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.46eafcc5.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from \"../helpers\";\nimport PropTypes from \"prop-types\";\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n    }\n\n    goToStore = event => {\n        //1.Stop the form from submitting\n        event.preventDefault();\n        //2. get the text from the input\n       const storeName = this.myInput.current.value;\n        //3. Change the page to /store/whatever-they-entered/\n        this.props.history.push(`/store/${storeName}`);\n    }\n\n    render() {\n        return (\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                    type=\"text\" \n                    ref= {this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={getFunName()} \n                />\n                <button type=\"submit\">Visit Store</button>\n                </form>\n\n        )\n\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Header = props => \n (\n        <header className=\"top\">\n                <h1>\n                    Catch \n                    <span className=\"ofThe\">\n                        <span className=\"of\">of</span> \n                        <span className=\"the\">the</span> \n                    </span>\n                    Day</h1>\n                <h3 className=\"tagline\">\n                <span>{props.tagline}</span>\n            </h3>\n            </header>\n    );\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\n\nexport default Header;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func,\n    }\n\n    createFish = (event) => {\n        //1. stop form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n        this.props.addFish(fish);\n        //refresh the form\n        event.currentTarget.reset();\n    }\n    \n    render () {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\"></textarea>\n                <input namee=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n                <button type=\"submit\">Add Fish</button>\n            </form>\n        );\n    }\n}\nexport default AddFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n\n    static propTypes ={\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func,\n    }\n\n    handleChange = (event) => {\n        //update that fish\n        //1. Take a copy of current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    }\n\n    render() {\n    return (\n    <div className=\"fish-edit\">\n        <input \n            type=\"text\" \n            name=\"name\" \n            onChange={this.handleChange} \n            value={this.props.fish.name} \n        />\n        <input \n            type=\"text\" \n            name=\"price\" \n            onChange={this.handleChange} \n            value={this.props.fish.price} \n        />\n        <select \n            name=\"status\" \n            onChange={this.handleChange} \n            value={this.props.fish.status} \n        >\n                <option value=\"available\">Fresh!</option>\n                <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea \n            name=\"desc\" \n            onChange={this.handleChange} \n            value={this.props.fish.desc} \n        >\n        </textarea>\n        <input \n            type=\"text\" \n            name=\"image\" \n            onChange={this.handleChange} \n            value={this.props.fish.image} />\n        \n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove fish\n        </button>\n\n        </div>\n    )\n}\n}\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>\n        Log In With GitHub\n        </button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Google')}>\n        Log In With Google\n        </button>\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n        Log In With Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    \n        apiKey: \"AIzaSyAjCb7D_0XvJV9kztnqIzS2V18JvRZ4GHk\",\n        authDomain: \"fish-store-project.firebaseapp.com\",\n        databaseURL: \"https://fish-store-project.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//This is a named export\nexport { firebaseApp };\n\n//This is a default export\nexport default base;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n    };\n    \n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({user});\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        //1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context:this });\n        console.log(store);\n        //2. Claim it if there  is no owner\n        if (!store.owner) {\n            //save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid,\n                owner: store.owner || authData.user.uid\n            })\n        }\n        //3. Set the state of  the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid\n        })\n\n        console.log(authData);\n    };\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n\n    };\n\n    logout = async () => {\n        console.log('Logging out');\n        await firebase.auth().signOut();\n        this.setState({uid:null});\n    }\n\n    render () {\nconst logout = <button onClick={this.logout}>Log out</button>\n\n        //1. Check if they loged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n        //2. Check if they are not the owner of the store\n        //if (this.state.uid !== this.state.owner) {\n        //    return (\n        //    <div>\n        //        <p>Sorry, you are not the owner!</p>\n        //        {logout}\n        //    </div>\n        //    )\n        //}\n        //3. If they are owner:\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                    <EditFishForm \n                        key={key} \n                        index={key}\n                        fish={this.props.fishes[key]} \n                        updateFish={this.props.updateFish} \n                        deleteFish={this.props.deleteFish} \n                    />)}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\nexport default Inventory;","import React from 'react';\nimport { formatPrice } from \"../helpers\";\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nclass Order extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        removeFromOrder: PropTypes.func,\n        order: PropTypes.object\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish.status === 'available'; \n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: {enter:500, exit:500}\n        }\n\n        //Make sure the fish is loaded before we continue\n        if (!fish) return null;\n\n        if(!isAvailable) {\n            \n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>Sorry {fish ? fish.name : 'Fish'} is no longer available.</li>\n                </CSSTransition>\n            );\n            \n        }\n        return( \n            <CSSTransition {...transitionOptions}>\n            <li key={key}>\n                <span>\n                    <TransitionGroup component=\"span\" className=\"count\" >\n                        <CSSTransition {...transitionOptions}>\n                            <span>{count}</span>\n                        </CSSTransition>\n                    </TransitionGroup>\n                lbs {fish.name} \n                {formatPrice(count * fish.price)}\n                <button onClick={() => this.props.removeFromOrder(key)}>x</button>\n                </span>\n            </li>\n            </CSSTransition>\n            );\n    }\n\n    render () {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count*fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>                \n                <div className=\"total\">\n                Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Order;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyones favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    render () {\n        const {image, name, price, desc, status} =this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n            <img src={image} alt={name} />\n            <h3 className=\"fish-name\">{name}\n            <span className=\"price\">{formatPrice(price)}</span>\n            </h3>\n            <p>{desc}</p>\n            <button disabled={!isAvailable} onClick = {() => this.props.addToOrder(this.props.index)}>\n                {isAvailable ? 'Add to Order' : 'Sold out'}\n            </button>\n            </li>\n        );\n    }\n}\nexport default Fish;","import React from 'react';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport sampeFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\nimport PropTypes from \"prop-types\";\n\nclass App extends React.Component {\n    \n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object,\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = (fish) => {\n        //1. Take a copy of exsisting state\n        const fishes = { ... this.state.fishes};\n        //2. Add new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        //3. Set the new fishes to object state\n        this.setState({fishes});\n    };\n\n    updateFish = (key, updatedFish) => {\n        //1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        //2. Update that state\n        fishes[key] = updatedFish;\n        //3. Set that to state\n        this.setState({ fishes });\n    }\n\n    deleteFish = (key) => {\n        //1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        //2. Update that state\n        fishes[key] = null;\n        //3. Set that to state\n        this.setState({ fishes });\n    }\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampeFishes });\n    };\n\n    addToOrder = (key) => {\n        //1.Take copy of state\n        const order = {...this.state.order};\n        //2. Either add to the order Or update the number in order\n        order[key] = order[key] +1 || 1;\n        //3. Call setState to update our state object\n        this.setState({order});\n    }\n\n    removeFromOrder = (key) => {\n        //1. Take a copy of state\n        const order = { ...this.state.order };\n        //2. Remove itrm from order\n        delete order[key];\n        //3. Set that to state\n        this.setState({ order });\n    }\n\n    render () {\n        return (\n            <div className=\"catch-of-the-day \">\n                <div className=\"Menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish \n                                key={key} \n                                index = {key}\n                                details={this.state.fishes[key]} \n                                addToOrder={this.addToOrder} \n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order} \n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish = {this.updateFish}\n                    deleteFish = {this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes} \n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n                <Route exact path=\"/\" component={StorePicker} />\n                <Route exact path=\"/store/:storeId\" component={App} />\n                <Route exact component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}